/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN3_VIEW_BASE_HPP
#define SCREEN3_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen3_screen/Screen3Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/containers/scrollers/ScrollList.hpp>
#include <gui/containers/baud_list.hpp>

#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <gui/containers/port_list.hpp>
class Screen3ViewBase : public touchgfx::View<Screen3Presenter>
{
public:
    Screen3ViewBase();
    virtual ~Screen3ViewBase() {}

    virtual void setupScreen();

    virtual void scrollList1UpdateItem(baud_list& item, int16_t itemIndex)
    {
        // Override and implement this function in Screen3
    }

    virtual void scrollList_PortUpdateItem(port_list& item, int16_t itemIndex)
    {
        // Override and implement this function in Screen3
    }

    /*
     * Custom Action Handlers
     */
    virtual void clickOpen()
    {
        // Override and implement this function in Screen3View
    }

    virtual void clickClose()
    {
        // Override and implement this function in Screen3View
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box1;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::ScrollList scrollList1;
    touchgfx::DrawableListItems<baud_list, 3> scrollList1ListItems;

    touchgfx::ButtonWithLabel buttonWithLabel_Open;
    touchgfx::ButtonWithLabel buttonWithLabel_Close;
    touchgfx::BoxWithBorder boxWithBorder1_1;
    touchgfx::ScrollList scrollList_Port;
    touchgfx::DrawableListItems<port_list, 3> scrollList_PortListItems;

    touchgfx::ButtonWithLabel buttonWithLabel_OK;

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void updateItemCallbackHandler(DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen3ViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<Screen3ViewBase, DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

};

#endif // SCREEN3_VIEW_BASE_HPP
