/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_HID_VIEW_BASE_HPP
#define SCREEN_HID_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_hid_screen/Screen_HIDPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class Screen_HIDViewBase : public touchgfx::View<Screen_HIDPresenter>
{
public:
    Screen_HIDViewBase();
    virtual ~Screen_HIDViewBase() {}

    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box1;
    touchgfx::ButtonWithIcon buttonWithIcon_Home;
    touchgfx::TextAreaWithOneWildcard textArea_L_X;
    touchgfx::TextAreaWithOneWildcard textArea_L_Y;
    touchgfx::TextAreaWithOneWildcard textArea_R_X;
    touchgfx::TextAreaWithOneWildcard textArea_R_Y;
    touchgfx::TextAreaWithOneWildcard textArea_L_U;
    touchgfx::TextAreaWithOneWildcard textArea_L_D;
    touchgfx::TextAreaWithOneWildcard textArea_L_L;
    touchgfx::TextAreaWithOneWildcard textArea_L_R;
    touchgfx::TextAreaWithOneWildcard textArea_R_U;
    touchgfx::TextAreaWithOneWildcard textArea_R_D;
    touchgfx::TextAreaWithOneWildcard textArea_R_L;
    touchgfx::TextAreaWithOneWildcard textArea_R_R;
    touchgfx::TextAreaWithOneWildcard textArea_Connected;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_L_X_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_L_XBuffer[TEXTAREA_L_X_SIZE];
    static const uint16_t TEXTAREA_L_Y_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_L_YBuffer[TEXTAREA_L_Y_SIZE];
    static const uint16_t TEXTAREA_R_X_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_R_XBuffer[TEXTAREA_R_X_SIZE];
    static const uint16_t TEXTAREA_R_Y_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_R_YBuffer[TEXTAREA_R_Y_SIZE];
    static const uint16_t TEXTAREA_L_U_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_L_UBuffer[TEXTAREA_L_U_SIZE];
    static const uint16_t TEXTAREA_L_D_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_L_DBuffer[TEXTAREA_L_D_SIZE];
    static const uint16_t TEXTAREA_L_L_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_L_LBuffer[TEXTAREA_L_L_SIZE];
    static const uint16_t TEXTAREA_L_R_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_L_RBuffer[TEXTAREA_L_R_SIZE];
    static const uint16_t TEXTAREA_R_U_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_R_UBuffer[TEXTAREA_R_U_SIZE];
    static const uint16_t TEXTAREA_R_D_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_R_DBuffer[TEXTAREA_R_D_SIZE];
    static const uint16_t TEXTAREA_R_L_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_R_LBuffer[TEXTAREA_R_L_SIZE];
    static const uint16_t TEXTAREA_R_R_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_R_RBuffer[TEXTAREA_R_R_SIZE];
    static const uint16_t TEXTAREA_CONNECTED_SIZE = 16;
    touchgfx::Unicode::UnicodeChar textArea_ConnectedBuffer[TEXTAREA_CONNECTED_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen_HIDViewBase, const touchgfx::AbstractButton&> buttonCallback;

};

#endif // SCREEN_HID_VIEW_BASE_HPP
