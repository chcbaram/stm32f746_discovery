/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen3_screen/Screen3ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

Screen3ViewBase::Screen3ViewBase() :
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler),
    updateItemCallback(this, &Screen3ViewBase::updateItemCallbackHandler)
{
    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    boxWithBorder1.setPosition(57, 81, 171, 48);
    boxWithBorder1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    boxWithBorder1.setBorderSize(2);

    scrollList1.setPosition(48, 82, 171, 48);
    scrollList1.setHorizontal(false);
    scrollList1.setCircular(false);
    scrollList1.setEasingEquation(EasingEquations::backEaseOut);
    scrollList1.setSwipeAcceleration(10);
    scrollList1.setDragAcceleration(10);
    scrollList1.setNumberOfItems(4);
    scrollList1.setPadding(0, 0);
    scrollList1.setSnapping(true);
    scrollList1.setDrawableSize(35, 1);
    scrollList1.setDrawables(scrollList1ListItems, updateItemCallback);

    buttonWithLabel_Open.setXY(265, 21);
    buttonWithLabel_Open.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithLabel_Open.setLabelText(TypedText(T_SINGLEUSEID5));
    buttonWithLabel_Open.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel_Open.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel_Open.setAction(buttonCallback);

    buttonWithLabel_Close.setXY(265, 76);
    buttonWithLabel_Close.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithLabel_Close.setLabelText(TypedText(T_SINGLEUSEID6));
    buttonWithLabel_Close.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel_Close.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel_Close.setAction(buttonCallback);

    boxWithBorder1_1.setPosition(57, 25, 171, 48);
    boxWithBorder1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1_1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    boxWithBorder1_1.setBorderSize(2);

    scrollList_Port.setPosition(48, 25, 171, 48);
    scrollList_Port.setHorizontal(false);
    scrollList_Port.setCircular(false);
    scrollList_Port.setEasingEquation(EasingEquations::backEaseOut);
    scrollList_Port.setSwipeAcceleration(10);
    scrollList_Port.setDragAcceleration(10);
    scrollList_Port.setNumberOfItems(1);
    scrollList_Port.setPadding(0, 0);
    scrollList_Port.setSnapping(true);
    scrollList_Port.setDrawableSize(35, 1);
    scrollList_Port.setDrawables(scrollList_PortListItems, updateItemCallback);

    buttonWithLabel_OK.setXY(155, 201);
    buttonWithLabel_OK.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithLabel_OK.setLabelText(TypedText(T_SINGLEUSEID11));
    buttonWithLabel_OK.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel_OK.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel_OK.setAction(buttonCallback);

    add(box1);
    add(boxWithBorder1);
    add(scrollList1);
    add(buttonWithLabel_Open);
    add(buttonWithLabel_Close);
    add(boxWithBorder1_1);
    add(scrollList_Port);
    add(buttonWithLabel_OK);
}

void Screen3ViewBase::setupScreen()
{
    scrollList1.initialize();
    for (int i = 0; i < scrollList1ListItems.getNumberOfDrawables(); i++)
    {
        scrollList1ListItems[i].initialize();
    }
    scrollList_Port.initialize();
    for (int i = 0; i < scrollList_PortListItems.getNumberOfDrawables(); i++)
    {
        scrollList_PortListItems[i].initialize();
    }
}

void Screen3ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Open)
    {
        //Interaction1
        //When buttonWithLabel_Open clicked call virtual function
        //Call clickOpen
        clickOpen();

        //Interaction2
        //When Interaction1 completed change screen to Screen2
        //Go to Screen2 with screen transition towards North
        application().gotoScreen2ScreenSlideTransitionNorth();
    }
    else if (&src == &buttonWithLabel_Close)
    {
        //Interaction_Close
        //When buttonWithLabel_Close clicked call virtual function
        //Call clickClose
        clickClose();

        //Interaction4
        //When Interaction_Close completed change screen to Screen2
        //Go to Screen2 with screen transition towards North
        application().gotoScreen2ScreenSlideTransitionNorth();
    }
    else if (&src == &buttonWithLabel_OK)
    {
        //Interaction5
        //When buttonWithLabel_OK clicked change screen to Screen2
        //Go to Screen2 with screen transition towards North
        application().gotoScreen2ScreenSlideTransitionNorth();
    }
}

void Screen3ViewBase::updateItemCallbackHandler(DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &scrollList1ListItems)
    {
        Drawable* d = items->getDrawable(containerIndex);
        baud_list* cc = (baud_list*)d;
        scrollList1UpdateItem(*cc, itemIndex);
    }
    else if (items == &scrollList_PortListItems)
    {
        Drawable* d = items->getDrawable(containerIndex);
        port_list* cc = (port_list*)d;
        scrollList_PortUpdateItem(*cc, itemIndex);
    }
}
